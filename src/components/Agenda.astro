---
import { filterPastEvents } from "../functions/filterPastEvents";

// TODO: create interface for agenda

const { agenda } = Astro.props;
---

<div class="Agenda">
  <h2 class="Agenda-title">Agenda</h2>
  <div>
    {
      agenda
        .filter(filterPastEvents)
        .sort((a: any, b: any) => {
          if (!a.date) return 1;
          if (!b.date) return -1;
          return new Date(a.date) - new Date(b.date);
        })
        .map((event: any) => {
          return (
            <div class="Agenda-item">
              <time class="Agenda-date" datetime={event.date}>
                {event.date &&
                  new Date(event.date).toLocaleDateString("nl-NL", {
                    weekday: "short",
                    day: "numeric",
                    month: "short",
                  })}
              </time>
              <div class="Agenda-location">
                <span class="Agenda-brandName">{event.brand_name}</span>
                {event.location && (
                  <span class="Agenda-subtitle">{event.location}</span>
                )}
              </div>
              <a href={event.ticket_url} class="Agenda-callToAction">
                {event.label}
              </a>
            </div>
          );
        })
    }
  </div>
</div>
<style>
  .Agenda {
    --__large-font-size: 1.5rem;
    --__small-font-size: 1rem;
  }

  .Agenda-item {
    display: grid;
    grid-template-columns: 1.618fr 3fr min-content;
    gap: 1rem;
    padding-block: 1rem;
    font-size: var(--__small-font-size);
    position: relative;
  }

  .Agenda-item:after {
    content: "";
    position: absolute;
    bottom: 0px;
    width: 100%;
    height: 0.5px;
    background-color: currentcolor;
    opacity: 0.3;
  }

  .Agenda-location {
    display: flex;
    flex-direction: column;
  }

  .Agenda-callToAction {
    color: var(--text-color);
    text-align: right;
    text-decoration: none;
    transition: opacity 0.2s;

    &:hover {
      opacity: 1;
    }
  }

  .Agenda-date,
  .Agenda-callToAction,
  .Agenda-subtitle {
    opacity: 0.6;
  }

  .Agenda-date {
    color: var(--text-color-muted);
    text-transform: capitalize;
  }

  .Agenda-brandName,
  .Agenda-date {
    font-size: var(--__large-font-size);
    font-weight: 700;
  }
  @media (max-width: 768px) {
    .Agenda-item {
      grid-template-columns: 1fr min-content;
      grid-template-rows: min-content 1fr;
      gap: 0;
      padding-block: 1.5rem;
    }

    .Agenda-date,
    .Agenda-location {
      grid-column: 1 / 3;
    }

    .Agenda-date {
      grid-row: 1;
      font-size: var(--__small-font-size);
    }

    .Agenda-location {
      grid-row: 2;
    }

    .Agenda-callToAction {
      grid-row: 2;
      grid-column: 3;
    }
  }
</style>
